# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
pool:
  vmImage: ubuntu-latest

trigger:
  batch: true
  branches:
    include:
      - master
      - refs/pull/*
      - refs/tags/release-*

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      pwd
      Invoke-WebRequest -Uri 'https://dotalignartifacts.blob.core.windows.net/releasebinaries/falcon/Falcon_7.8.4.zip' -OutFile falcon_latest.zip
      ls -la
- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '**/falcon_latest.zip'
    destinationFolder: 'falcon_app'
    cleanDestinationFolder: true
    overwriteExistingFiles: true
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      sudo sh -c ''echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-$(lsb_release -cs)-prod $(lsb_release -cs) main" > /etc/apt/sources.list.d/dotnetdev.list''
      sudo apt-get update
      sudo apt-get install azure-functions-core-tools-4

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      ls -la /falcon_app/
      New-Item Dockerfile -ItemType File -Value ("FROM mcr.microsoft.com/dotnet/sdk:6.0 AS installer-env" + [Environment]::NewLine)
      Add-Content Dockerfile ("COPY --from=mcr.microsoft.com/dotnet/core/sdk:3.1 /usr/share/dotnet /usr/share/dotnet")
      Add-Content Dockerfile ("COPY **/falcon_app/* /home/site/wwwroot/")
      Add-Content Dockerfile ("FROM mcr.microsoft.com/azure-functions/dotnet:4-appservice")
      Add-Content Dockerfile ("ENV AzureWebJobsScriptRoot=/home/site/wwwroot \")
      Add-Content Dockerfile ("    AzureFunctionsJobHost__Logging__Console__IsEnabled=true")
      cat Dockerfile
- task: Docker@2
  inputs:
    containerRegistry: 'arc2'
    repository: 'falc1'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
